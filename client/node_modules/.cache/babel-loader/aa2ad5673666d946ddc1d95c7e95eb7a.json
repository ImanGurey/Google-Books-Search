{"ast":null,"code":"import _classCallCheck from \"/Users/imangure/Google-Books-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/imangure/Google-Books-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/imangure/Google-Books-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/imangure/Google-Books-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/imangure/Google-Books-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/imangure/Google-Books-Search/client/src/components/Nav/index.js\";\n// Import react\nimport React, { Component } from \"react\"; // Import react router library for links\n\nimport { Link } from \"react-router-dom\"; // Import css style sheet\n\nimport \"./style.css\"; // Define Nav component with attributes and links\n\nvar Nav =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Nav, _Component);\n\n  function Nav() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Nav);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Nav)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      width: window.innerWidth\n    };\n\n    _this.updateWidth = function () {\n      var newState = {\n        width: window.innerWidth\n      };\n\n      if (_this.state.open && newState.width > 991) {\n        newState.open = false;\n      }\n\n      _this.setState(newState);\n    };\n\n    _this.toggleNav = function () {\n      _this.setState({\n        open: !_this.state.open\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Nav, [{\n    key: \"componentDidMount\",\n    // on component load add event listner to window resize  \n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateWidth);\n    } // on component unload destroy event listner\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateWidth);\n    } // render navbar\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"nav\", {\n        className: \"navbar navbar-expand-lg navbar-light bg-light mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"navbar-brand\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Google Books\"), React.createElement(\"button\", {\n        onClick: this.toggleNav,\n        className: \"navbar-toggler\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#navbarNav\",\n        \"aria-controls\": \"navbarNav\",\n        \"aria-expanded\": \"false\",\n        \"aria-label\": \"Toggle navigation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"\".concat(this.state.open ? \"\" : \"collapse \", \"navbar-collapse\"),\n        id: \"navbarNav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"navbar-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: this.toggleNav,\n        className: window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Search\")), React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: this.toggleNav,\n        className: window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\",\n        to: \"/saved\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Saved\")))));\n    }\n  }]);\n\n  return Nav;\n}(Component);\n\nexport default Nav;","map":{"version":3,"sources":["/Users/imangure/Google-Books-Search/client/src/components/Nav/index.js"],"names":["React","Component","Link","Nav","state","open","width","window","innerWidth","updateWidth","newState","setState","toggleNav","addEventListener","removeEventListener","location","pathname"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;AACA,OAAO,aAAP,C,CAEA;;IACMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,KADA;AAENC,MAAAA,KAAK,EAAEC,MAAM,CAACC;AAFR,K;;UAMRC,W,GAAc,YAAM;AAClB,UAAMC,QAAQ,GAAG;AAAEJ,QAAAA,KAAK,EAAEC,MAAM,CAACC;AAAhB,OAAjB;;AAEA,UAAI,MAAKJ,KAAL,CAAWC,IAAX,IAAmBK,QAAQ,CAACJ,KAAT,GAAiB,GAAxC,EAA6C;AAC3CI,QAAAA,QAAQ,CAACL,IAAT,GAAgB,KAAhB;AACD;;AAED,YAAKM,QAAL,CAAcD,QAAd;AACD,K;;UAGDE,S,GAAY,YAAM;AAChB,YAAKD,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAE,CAAC,MAAKD,KAAL,CAAWC;AAApB,OAAd;AACD,K;;;;;;;AAED;wCACoB;AAClBE,MAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkC,KAAKJ,WAAvC;AACD,K,CAED;;;;2CACuB;AACrBF,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqC,KAAKL,WAA1C;AACD,K,CAED;;;;6BACS;AACP,aACE;AAAK,QAAA,SAAS,EAAC,oDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,EAAE,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAME;AACE,QAAA,OAAO,EAAE,KAAKG,SADhB;AAEE,QAAA,SAAS,EAAC,gBAFZ;AAGE,uBAAY,UAHd;AAIE,uBAAY,YAJd;AAKE,yBAAc,WALhB;AAME,yBAAc,OANhB;AAOE,sBAAW,mBAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CANF,EAkBE;AAAK,QAAA,SAAS,YAAK,KAAKR,KAAL,CAAWC,IAAX,GAAkB,EAAlB,GAAuB,WAA5B,oBAAd;AAAwE,QAAA,EAAE,EAAC,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,OAAO,EAAE,KAAKO,SADhB;AAEE,QAAA,SAAS,EAAEL,MAAM,CAACQ,QAAP,CAAgBC,QAAhB,KAA6B,GAA7B,GAAmC,iBAAnC,GAAuD,UAFpE;AAGE,QAAA,EAAE,EAAC,GAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAUE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,OAAO,EAAE,KAAKJ,SADhB;AAEE,QAAA,SAAS,EAAEL,MAAM,CAACQ,QAAP,CAAgBC,QAAhB,KAA6B,QAA7B,GAAwC,iBAAxC,GAA4D,UAFzE;AAGE,QAAA,EAAE,EAAC,QAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAVF,CADF,CAlBF,CADF;AA2CD;;;;EA7Eef,S;;AAgFlB,eAAeE,GAAf","sourcesContent":["// Import react\nimport React, { Component } from \"react\";\n// Import react router library for links\nimport { Link } from \"react-router-dom\";\n// Import css style sheet\nimport \"./style.css\";\n\n// Define Nav component with attributes and links\nclass Nav extends Component {\n  state = {\n    open: false,\n    width: window.innerWidth\n  };\n\n  // define with of component\n  updateWidth = () => {\n    const newState = { width: window.innerWidth };\n\n    if (this.state.open && newState.width > 991) {\n      newState.open = false;\n    }\n\n    this.setState(newState);\n  };\n\n  // toggle whether nav bar is collapsed or not.\n  toggleNav = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  // on component load add event listner to window resize  \n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWidth);\n  }\n\n  // on component unload destroy event listner\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWidth);\n  }\n\n  // render navbar\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-2\">\n        {/* link to home page */}\n        <Link className=\"navbar-brand\" to=\"/\">\n          Google Books\n        </Link>\n        {/* button to toggle collapse of navbar */}\n        <button\n          onClick={this.toggleNav}\n          className=\"navbar-toggler\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        {/* on this.state.open change show or collapse nav bar*/}\n        <div className={`${this.state.open ? \"\" : \"collapse \"}navbar-collapse`} id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/\"\n              >\n                Search\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/saved\"\n              >\n                Saved\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n"]},"metadata":{},"sourceType":"module"}