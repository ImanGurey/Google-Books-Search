{"ast":null,"code":"import _classCallCheck from \"/Users/imangure/Google-Books-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/imangure/Google-Books-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/imangure/Google-Books-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/imangure/Google-Books-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/imangure/Google-Books-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/imangure/Google-Books-Search/client/src/pages/Saved.js\";\n// Import react\nimport React, { Component } from \"react\"; // Import components\n\nimport Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\"; // Define Saved page\n\nvar Saved =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Saved, _Component);\n\n  function Saved() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Saved);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Saved)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: []\n    };\n\n    _this.getSavedBooks = function () {\n      API.getSavedBooks().then(function (res) {\n        return _this.setState({\n          books: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleBookDelete = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.getSavedBooks();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Saved, [{\n    key: \"componentDidMount\",\n    // get saved books when component is loaded\n    value: function componentDidMount() {\n      this.getSavedBooks();\n    } // query to mongo to return saved books\n    // uses a get route defined in API.js\n\n  }, {\n    key: \"render\",\n    // render saved books\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"(React) Google Books Search\")), React.createElement(\"h2\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Search for and Save Books of Interest.\")))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Saved Books\",\n        icon: \"download\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.state.books.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(Book, {\n          key: book._id,\n          title: book.title,\n          subtitle: book.subtitle,\n          link: book.link,\n          authors: book.authors.join(\", \"),\n          description: book.description,\n          image: book.image,\n          Button: function Button() {\n            return React.createElement(\"button\", {\n              onClick: function onClick() {\n                return _this2.handleBookDelete(book._id);\n              },\n              className: \"btn btn-danger ml-2\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73\n              },\n              __self: this\n            }, \"Delete\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n      })) : // display message if no books are saved\n      React.createElement(\"h2\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"No Saved Books\")))), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Saved;\n}(Component);\n\nexport default Saved;","map":{"version":3,"sources":["/Users/imangure/Google-Books-Search/client/src/pages/Saved.js"],"names":["React","Component","Jumbotron","Card","Book","Footer","API","Col","Row","Container","List","Saved","state","books","getSavedBooks","then","res","setState","data","catch","err","console","log","handleBookDelete","id","deleteBook","length","map","book","_id","title","subtitle","link","authors","join","description","image"],"mappings":"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","sourcesContent":["// Import react\nimport React, { Component } from \"react\";\n\n// Import components\nimport Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\n\n// Define Saved page\nclass Saved extends Component {\n  state = {\n    books: []\n  };\n\n  // get saved books when component is loaded\n  componentDidMount() {\n    this.getSavedBooks();\n  }\n\n  // query to mongo to return saved books\n  // uses a get route defined in API.js\n  getSavedBooks = () => {\n    API.getSavedBooks()\n      .then(res =>\n        this.setState({\n          books: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  // function to perform a delete route of book with specified id.\n  handleBookDelete = id => {\n    API.deleteBook(id).then(res => this.getSavedBooks());\n  };\n\n  // render saved books\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            {/* Jumbotron to display search message */}\n            <Jumbotron>\n              <h1 className=\"text-center\">\n                <strong>(React) Google Books Search</strong>\n              </h1>\n              <h2 className=\"text-center\">Search for and Save Books of Interest.</h2>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            {/* card to display save books */}\n            <Card title=\"Saved Books\" icon=\"download\">\n              {this.state.books.length ? (\n                <List>\n                  {/* card is created for each book */}\n                  {this.state.books.map(book => (\n                    <Book\n                      key={book._id}\n                      title={book.title}\n                      subtitle={book.subtitle}\n                      link={book.link}\n                      authors={book.authors.join(\", \")}\n                      description={book.description}\n                      image={book.image}\n                      Button={() => (\n                        <button\n                          onClick={() => this.handleBookDelete(book._id)}\n                          className=\"btn btn-danger ml-2\"\n                        >\n                          Delete\n                        </button>\n                      )}\n                    />\n                  ))}\n                </List>\n              ) : (\n                // display message if no books are saved\n                <h2 className=\"text-center\">No Saved Books</h2>\n              )}\n            </Card>\n          </Col>\n        </Row>\n        <Footer />\n      </Container>\n    );\n  }\n}\n\nexport default Saved;\n"]},"metadata":{},"sourceType":"module"}